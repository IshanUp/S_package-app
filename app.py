from cytomine import CytomineJob
from cytomine import CytomineJob
from cytomine.models import JobData
import logging
import os
import shutil
import sys
def main(argv):
     with CytomineJob.from_cli(argv) as cj:
        # Implement my software here.
        job = cj.job
        project = cj.project
        working_path = os.path.join("tmp",str(job.id))
        if not os.path.exists(working_path):
            logging.info("Creating working directory: %s", working_path)
            os.makedirs(working_path)
        output_path = os.path.join(working_path, "output.txt")
        f= open(output_path,"w+")
        alpha = float(cj.parameters.alpha) #get alpha parameter
        f.write("Alpha =   %f\r\n" % alpha)
        f.close() 

        #I save a file generated by this run into a "job data" that will be available in the UI. 
        job_data = JobData(job.id, "Generated File", "output.txt").save()
        job_data.upload(output_path)
        shutil.rmtree(working_path, ignore_errors=True)
            

if __name__ == "__main__":
    import sys
    main(sys.argv[1:])
